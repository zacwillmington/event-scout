{"version":3,"sources":["actions/authActions.js","components/Errors.js","components/SigninPage.js","components/SignupPage.js","components/NavBar.js","components/LogoutPage.js","actions/userActions.js","components/MusicEvents.js","components/BusinessEvents.js","components/FoodAndDrinksEvents.js","serviceWorker.js","actions/eventsActions.js","containers/EventCategoriesContainer.js","components/eventsSearchPage.js","components/MainImageComponent.js","containers/HomePageContainer.js","components/EventIndexView.js","components/Events.js","containers/EventsContainer.js","components/UserInput.js","containers/AccountContainer.js","reducers/eventsReducer.js","components/EventComponent.js","components/EventInput.js","App.js","reducers/usersReducer.js","reducers/authReducer.js","reducers/manageReducers.js","store.js","index.js"],"names":["authFailure","errors","type","authenticate","user","dispatch","fetch","method","headers","Content-Type","Accept","body","JSON","stringify","auth","then","resp","json","response","token","jwt","localStorage","setItem","getUser","catch","User Name or Email","clear","receivedUser","ok","getItem","e","logoutUser","displayErrors","alertFunc","undefined","Object","keys","map","key","index","errorText","concat","error","SigninPage","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleOnChange","event","setState","defineProperty","target","name","value","handleSubmit","preventDefault","state","email","password","alerted","prevProps","prevState","hasErrors","alert","isAuthenticated","history","push","_this2","react_default","a","createElement","className","id","onSubmit","onChange","placeholder","Component","withAlert","withRouter","connect","currentUser","authReducer","isAuthenticating","isLoading","SignupPage","user_name","newUser","signupUser","userData","NavBar","handleCreateEventForNontLoggedinUser","info","renderCreateEventLink","NavLink","to","onClick","renderAccountLink","renderLogoutLink","renderSigninSignupLinks","Fragment","LogoutPage","usersReducer","userErrors","sendingUpdate","MusicEvents","handleDisplayEvents","BusinessEvents","FoodAndDrinksEvents","Boolean","window","location","hostname","match","eventsHasErrored","eventsAreLoading","bool","eventsFetchDataSuccess","events","addEvent","eventData","userId","addEventData","data","getEventsBySearchBar","loc","searchTerm","eventDate","eventbriteUrlSearch","Authorization","Origin","eventsData","removeEvent","url","eventId","EventCategoriesContainer","getEvents","innerText","usersLocation","length","components_MusicEvents","components_FoodAndDrinksEvents","components_BusinessEvents","eventsReducer","locationSet","geoLocation","entries","constructor","locationString","latitude","longitude","EventsSearchPage","handleOnChangeEventDate","_d","validateInputs","inputData","locationAddress","formatString","string","replace","handleOnSubmit","dateTimeParsed","moment","format","searchTermFormatted","locationAddressFormatted","getSearchTerm","DateTime_default","MainImageComponent","HomePageContainer","setUsersLocation","coords","eventsSearchPage","components_MainImageComponent","containers_EventCategoriesContainer","HomeWithGeoloc","geolocated","positionOptions","enableHighAccuracy","userDecisionTimeout","EventIndexView","truncate","description","slice","viewEvent","pathname","currentEvent","venue_id","logo","start","end","status","currency","checked","src","alt","Events","renderEventsFromEventBrite","components_EventIndexView","text","timezoneStart","timezone","local","timezoneEnd","shareable","renderEventsFromEventScoutAPI","checkPropsEventsEmpty","Spinner","require","EventsContainer","handleViewEventsClick","getUsersEvents","usersEvents","renderViewYourEventsBtn","scrollTo","color","components_Events","eventsHasErrors","getUsersEventsFromEventScout","UserInput","editUser","res","editSuccess","AccountContainer","handleDelete","deleteUser","components_UserInput","deleteUserSuccess","defaultState","EventComponent","handleOnClickAddAndDelete","parseTimeDate","time","isUsersEvent","currentEventId","Number","some","evnt","lib_default","href","EventInput","handleOnChangeDateTimeStart","handleOnChangeDateTimeEnd","onDrop","picture","user_id","Date","eventErrors","eventSuccess","htmlFor","App","components_NavBar","Route","exact","path","component","isLoggedin","rootReducer","combineReducers","arguments","action","objectSpread","toConsumableArray","filter","_ref","persistConfig","storage","stateReconciler","autoMergeLevel2","persistedReducer","persistReducer","store","createStore","compose","applyMiddleware","thunk","logger","reduxReset","persistor","persistStore","ReactDOM","render","react_alert","assign","template","AlertTemplate","position","timeout","offset","transition","es","integration_react","loading","BrowserRouter","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.23a60320.chunk.js","sourcesContent":["\nexport const authRequest = () => {\n    return {\n        type: 'AUTHENTICATION_REQUEST'\n    } \n}\n \nexport const authSuccess = (user, token) => {\n    return {\n        type: 'AUTHENTICATION_SUCCESS',\n        user: user,\n        token: token\n    }\n} \n\nexport const authFailure = (errors) => {\n    return {\n        type: 'AUTHENTICATION_FAILURE',\n        errors: errors\n    }\n}\n\n\nexport const authenticate = user => {\n    return dispatch => {\n        dispatch(authRequest());\n        const userTokenUrl = 'http://localhost:3000/api/user_token';\n        return fetch( userTokenUrl, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                'Accept': 'application/json'\n            }, body: JSON.stringify({auth: user })\n        })\n        .then( resp => {\n           return resp.json()\n        })\n        .then(response => {\n            const token = response.jwt;\n            localStorage.setItem('token', token);\n            localStorage.setItem('user', user);\n            dispatch(getUser(user))\n        }).catch( errors => {\n          const errorMsg =  {\n                \"User Name or Email\": \"Doesn't match our records\"\n                }\n            dispatch(authFailure(errorMsg))\n            localStorage.clear()\n        })\n    }\n}\n\nexport const getUser = user => {\n    return dispatch => {\n        return fetch('/api/v1/find_user', {\n            method: 'post',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            }, body: JSON.stringify(user)\n        })\n        .then(resp => resp.json())\n        .then( receivedUser => {\n            if(!receivedUser.ok){\n                dispatch(authFailure(receivedUser.errors));\n            }else {\n                dispatch(authSuccess(receivedUser.user, localStorage.getItem('token'))); \n            }   \n        }).catch(e => dispatch(authFailure(e)))\n    }\n}\n\nexport const signupUser = user => {\n    return dispatch => {\n        dispatch(authRequest());\n        return fetch('/api/v1/signup', {\n            method: 'post',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({ user: user })\n        })\n        .then( resp => resp.json())\n        .then( userData => {\n            if(!userData.ok){\n                dispatch(authFailure(userData.errors))\n            }else {\n                dispatch(authenticate(user))\n            }\n        }).catch(e => dispatch(authFailure(e)))\n    }\n}\n\nexport const logoutUser = user => {\n    return dispatch => {\n        return fetch('/api/v1/logout', {\n            method:  'POST',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            }, body: JSON.stringify(user)\n        })\n        .then( resp =>resp.json())\n        .then( response => {\n            if (response.ok === true){\n                localStorage.clear()\n                dispatch({type: 'RESET'});\n            }\n        }).catch(e => dispatch(authFailure(e)));\n    }\n}\n\n","\n export const displayErrors = (errors, alertFunc) => {\n    if(errors !== undefined){\n        Object.keys(errors).map((key, index) => {\n            if(key !== 'password_digest'){\n                let errorText = `${key}: ${errors[key]}`\n                return alertFunc.error(errorText);\n            }\n          })\n      }\n} \n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { authenticate } from '../actions/authActions';\nimport { withAlert } from \"react-alert\";\nimport { withRouter } from 'react-router-dom';\n\nimport { displayErrors } from './Errors'\n\n\nclass SigninPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n        email: \"\",\n        password: \"\",\n        alerted: false\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if(this.props.hasErrors && !this.state.alerted){\n        this.setState({ alerted: true })\n      displayErrors(this.props.errors, this.props.alert);\n    } else if(this.props.isAuthenticated){\n        this.props.history.push('/');\n    }\n  }\n  \n\n  handleOnChange = event => {\n    this.setState({\n        [event.target.name]: event.target.value\n    })\n  }\n\n  handleSubmit = (event) => {\n      event.preventDefault();\n      this.props.authenticate(this.state);\n      this.setState({\n        email: \"\",\n        password: \"\",\n        alerted: false\n      })\n }\n\n    render() {\n      return (\n            <div className='signinInput'>\n             <form id='signin-form' onSubmit={event => this.handleSubmit(event)} > \n                <div id='signin-title'><h1>SIGN IN</h1></div>\n                  <div id='signin-form-div'>\n                     <input id='signin-email' onChange={event => this.handleOnChange(event)} name='email' type='text' value={this.state.email} placeholder='Email'/>\n                      \n                  \n                      <input id='signin-password' onChange={event => this.handleOnChange(event)} name='password' type='password' value={this.state.password} placeholder='Password' />\n                  </div>\n                    <input className='signin-user-btn' type='submit' value='SUBMIT'/>\n                </form>\n            </div>\n      )\n    }\n}\n  const mapDispatchToProps = dispatch => {\n    return { \n        authenticate: (user) => {\n            dispatch(authenticate(user));\n        } \n    }\n}\n\nconst mapStateToProps = state => {\n    return { \n            currentUser: state.authReducer.currentUser,\n            isAuthenticating: state.authReducer.isAuthenticating,\n            isAuthenticated: state.authReducer.isAuthenticated,\n            isLoading: state.authReducer.isLoading,\n            hasErrors: state.authReducer.hasErrors,\n            errors: state.authReducer.errors \n            }\n}\n\nexport default withAlert(withRouter(connect(mapStateToProps, mapDispatchToProps)(SigninPage)));\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from \"react-router-dom\";\nimport { withAlert } from \"react-alert\";\nimport { signupUser } from '../actions/authActions';\nimport { displayErrors } from './Errors'\n\n\nclass SignupPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      user_name: \"\",\n        email: \"\",\n        password: \"\"\n    }\n  }\n\n\n  componentDidUpdate(prevProps, prevState) {\n    if(this.props.hasErrors && prevProps.isAuthenticating){\n      displayErrors(this.props.errors, this.props.alert);\n    } else if(this.props.isAuthenticated) { \n      this.props.history.push('/');\n    }\n  }\n\n  handleOnChange = event => {\n    this.setState({\n        [event.target.name]: event.target.value\n    })\n  }\n\n  handleSubmit = event => {\n      event.preventDefault();\n      this.setState({\n          user_name: this.state.user_name,\n          email: this.state.email,\n          password: this.state.password\n      })\n      const newUser = this.state;\n      this.props.signupUser(newUser);\n      this.setState({ \n        user_name: '',\n        email: '',\n        password: ''\n      });\n  } \n\n    render() {\n      return (\n            <div className='signupInput'>\n            \n                <form id='signup-form' onSubmit={event => this.handleSubmit(event)} > \n                <div id='signup-title'><h1>SIGN UP</h1></div>\n                  <div id='signup-form-div'>\n                      <input id='signup-user_name' onChange={event => this.handleOnChange(event)} name='user_name' type='text' value={this.state.user_name}\n                      placeholder='User Name'/>\n                      \n\n                      <input id='signup-email' onChange={event => this.handleOnChange(event)} name='email' type='text' value={this.state.email} placeholder='Email'/>\n                      \n                  \n                      <input id='signup-password' onChange={event => this.handleOnChange(event)} name='password' type='password' value={this.state.password} placeholder='Password' />\n                  </div>\n                    <input className='signup-user-btn' type='submit' value='SUBMIT'/>\n                </form>\n            </div>\n      )\n    }\n  }\n\n  const mapDispatchToProps = dispatch => { \n    return {\n      signupUser: (user) => {\n          return dispatch(signupUser(user))\n      } \n    }\n  }\n\n  const mapStateToProps = state => {\n    return {\n       isAuthenticating: state.authReducer.isAuthenticating,\n        isAuthenticated: state.authReducer.isAuthenticated,\n        hasErrors: state.authReducer.hasErrors,\n        errors: state.authReducer.errors\n    }\n  }\n\n\nexport default withAlert(withRouter(connect(mapStateToProps, mapDispatchToProps)(SignupPage)));","import React, { Component } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { connect } from 'react-redux'; \nimport { withAlert } from 'react-alert';\nimport { withRouter } from 'react-router-dom';\n\n\nclass NavBar extends Component {\n\n    handleCreateEventForNontLoggedinUser = () => {\n        this.props.alert.info(\"You Mush have an account before you can create an event.\")\n        this.props.history.push('/signup');\n    }\n\n    renderCreateEventLink = () =>{\n       if (this.props.isAuthenticated){\n            return (\n                <li><NavLink to={`/users/${this.props.currentUser.id}/events/new`}>Create Event\n             </NavLink></li>\n            )\n       } else{\n            return (\n                <li><NavLink to={''} onClick={() => this.handleCreateEventForNontLoggedinUser()}>\n                    Create Event\n                </NavLink></li>\n            )\n       }\n    }\n\n    renderAccountLink = () => {\n        if(this.props.isAuthenticated){\n            return (\n                <li><NavLink to={`/users/${this.props.currentUser.id}`}>Account</NavLink></li>\n            )\n        }\n    }\n    renderLogoutLink = () => {\n        if(this.props.isAuthenticated){\n            return (\n                <li><NavLink to='/logout'>Logout</NavLink></li>\n            )\n        }\n    }\n\n    renderSigninSignupLinks = () => {\n        if(!this.props.isAuthenticated && !this.props.isAuthenticating){\n            return (\n                <React.Fragment>\n                    <li><NavLink to='/signin'>Sign In</NavLink></li>\n                    <li><NavLink to='/signup'>Sign Up</NavLink></li>\n                </React.Fragment>\n            )\n        } \n    }\n    render(){\n        return (\n            <div className='navBar'>\n                <ul className='nav nav-tabs'>\n                    <li><NavLink to='/'>Home</NavLink></li>\n                    <li><NavLink to='/events'>Events</NavLink></li>\n                    { this.renderAccountLink() }\n                    { this.renderCreateEventLink() }\n                    { this.renderLogoutLink() }\n                    { this.renderSigninSignupLinks() }\n                </ul>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        currentUser: state.authReducer.currentUser,\n        isAuthenticated: state.authReducer.isAuthenticated\n    }\n}\nexport default withAlert(withRouter(connect(mapStateToProps)(NavBar)))","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\n\nimport { logoutUser } from '../actions/authActions';\n\nclass LogoutPage extends Component {\n\n    componentWillMount() {\n         this.props.logoutUser(this.props.currentUser)\n         this.props.history.push('/signin');\n    }\n  \n    render() {\n        return null \n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        logoutUser: user => {\n                dispatch(logoutUser(user));\n        }\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        currentUser: state.usersReducer.currentUser\n    }\n}\n\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(LogoutPage))","const editSuccess = user => {\n    return {\n        type: 'UPDATE_CURRENT_USER',\n        user: user\n    }\n}\n\nconst userErrors = (user,errors) => {\n    return {\n        type: 'USER_HAS_ERRORS',\n        user: user,\n        errors: errors\n    }\n}\n\nconst sendingUpdate = user => {\n    return {\n        type: 'SENDING_USER_REQUEST',\n        user: user\n    }\n}\n\nconst deleteUserSuccess = user => {\n    return {\n        type: 'DELETE_USER',\n        user: user\n    }\n}\n\n\nexport const setUsersLocation = coords => {\n    if(coords !== null){\n        return dispatch => { dispatch({ type: 'SET_LOCATION', coords: coords})}\n    }\n}\n\nexport const editUser = user => {\n    return dispatch => {\n        dispatch(sendingUpdate(user));\n        fetch(`/api/v1/users/${user.id}`, {\n            method: 'PATCH',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            }, body: JSON.stringify(user)\n        })\n        .then(res => {\n            return res.json();\n          })\n          .then( userData => {\n            if(!userData.ok) {\n                dispatch(userErrors(userData.user, userData.errors))\n            }else {\n                dispatch(editSuccess(user));\n            }\n          })\n    }\n}\n\n\nexport const deleteUser = user => {\n    return dispatch => {\n        dispatch(sendingUpdate(user))\n        fetch(`/api/v1/users/${user.id}`,{\n            method: 'DELETE',\n            headers: {\n                'Accept': 'application/js',\n                'Content-Type': 'application/js',\n            }, body: JSON.stringify(user)\n        })\n        .then(resp => resp.json())\n        .then(data => {\n            if(!data.ok) {\n                dispatch(userErrors(data.user, data.errors))\n            }else {\n                dispatch(deleteUserSuccess(user))\n                localStorage.clear()\n                dispatch({type: 'RESET'});\n            }\n        })\n    }\n}\n","import React from 'react';\n\nconst MusicEvents = props => {\n    return (\n        <div className='music-events-container'>\n            <a onClick={event => props.handleDisplayEvents(event)}>\n                <h1>Music</h1>\n            </a>\n        </div>\n    );\n}\n    \nexport default MusicEvents","import React from 'react';\n\nconst BusinessEvents = props => {\n    return (\n        <div className='business-events-container'>\n            <a onClick={event => props.handleDisplayEvents(event)}>\n                <h1>Business</h1>\n            </a>\n        </div>\n    );\n}\n\nexport default BusinessEvents;","import React from 'react';\n\nconst FoodAndDrinksEvents = props => {\n    return (\n        <div className='food-and-drinks-events-container'>\n            <a onClick={event => props.handleDisplayEvents(event)}>\n                <h1>Food and Drink</h1>\n            </a>\n        </div>\n    );\n}\n\nexport default FoodAndDrinksEvents;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","function eventsHasErrored(errors) {\n    return {\n        type: 'EVENTS_HAS_ERRORS',\n        errors: errors\n    };\n}\nfunction eventsAreLoading(bool) {\n    return {\n        type: 'EVENTS_ARE_LOADING',\n        isLoading: bool\n    };\n}\nfunction eventsFetchDataSuccess(events) {\n    return {\n        type: 'EVENTS_FETCH_DATA_SUCCESS',\n        events: events\n    };\n}\n\nfunction addEventData(eventData){\n    return {\n        type: 'ADD_TO_USERS_EVENTS',\n        eventData: eventData\n    }\n}\n\nfunction addingEvent(){\n    return {\n        type: 'ADDING_EVENT'\n    }\n}\n\nfunction getUsersEventsFromEventScout(events, user){\n    return {\n        type: 'USERS_EVENTS_FETCH_SUCCESS',\n        usersEvents: events,\n        user: user\n    }\n}\n\nexport const getEvents = (searchTerm, geoLocation) => {\n    return dispatch => {\n        dispatch(eventsAreLoading(true))\n        const anonymousAccessOAuthToken = \"77ZSPVIUQPRNZ7ZLZN5O\";\n        let eventbriteUrlSearch = `https://www.eventbriteapi.com/v3/events/search?q=${searchTerm}`;\n         //Check if user's location has coordinates.\n        if(Object.entries(geoLocation).length !== 0 && geoLocation.constructor === Object){\n            const locationString = `location.latitude=${geoLocation.latitude}&location.longitude=${geoLocation.longitude}`\n            eventbriteUrlSearch = `https://www.eventbriteapi.com/v3/events/search?q=${searchTerm}&${locationString}&expand=venue`;\n        }\n\n        // $search_url?token=$token&q=&date_created.keyword=today&page=$repeat&sort_by=$date&expand=venue\n\n        const homePageUrl = \"http://localhost:3000/\";\n        //Coors issue perhaps because I'm developing on two different ports e.g. 3000 frontend and 3001 on backend.\n        const CORSProxyServerUrl = \"https://cors-anywhere.herokuapp.com/\";\n\n        return fetch(CORSProxyServerUrl + eventbriteUrlSearch, {\n            method: \"GET\",\n            headers: {\n                    \"Authorization\": `Bearer ${anonymousAccessOAuthToken}`,\n                    \"Origin\": homePageUrl\n                }\n            }\n        )\n        .then(resp => resp.json())\n        .then( events => {\n                dispatch(eventsFetchDataSuccess(events))\n            }\n        ) \n    }\n}\n\nexport const addEvent = (eventData, userId) => {\n    return dispatch => {\n        dispatch(addingEvent());\n        fetch(`/api/v1/users/${userId}/events`, {\n            method: 'POST',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            }, body: JSON.stringify(eventData)\n        })\n        .then(resp => resp.json())\n        .then( eventData => {\n            if(!eventData.ok){\n                dispatch(eventsHasErrored(eventData.errors))\n            } else{\n                dispatch(addEventData(eventData.data))\n            }\n        })\n        .catch(e => dispatch(eventsHasErrored(e)))   \n    }\n\n}\n\nexport const getUsersEvents = user => {\n    return dispatch => {\n        dispatch(eventsAreLoading(true));\n        const url = `/api/v1/users/${user.id}/events`\n        fetch(url, {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n                'Accept': 'application/json'\n            }\n        })\n        .then(resp => resp.json())\n        .then(eventData => {\n            if(!eventData.ok) {\n                dispatch(eventsHasErrored(eventData.errors))\n            }else {\n                dispatch(getUsersEventsFromEventScout(eventData.events, user))\n            }\n        })\n    }\n}\n\nexport const getEventsBySearchBar = (loc, searchTerm, eventDate) => {\n    return (dispatch) => {\n        dispatch(eventsAreLoading(true));\n        const anonymousAccessOAuthToken = \"77ZSPVIUQPRNZ7ZLZN5O\";         \n        \n        const eventbriteUrlSearch = `https://www.eventbriteapi.com/v3/events/search?q=${searchTerm}&location.address=${loc}&start_date.range_start=${eventDate}`;\n\n        const homePageUrl = \"http://localhost:3000/\";\n\n        const CORSProxyServerUrl = \"https://cors-anywhere.herokuapp.com/\";\n\n        return fetch(CORSProxyServerUrl + eventbriteUrlSearch, {\n            method: \"GET\",\n            headers: {\n                    \"Authorization\": 'Bearer 77ZSPVIUQPRNZ7ZLZN5O',\n                    \"Origin\": homePageUrl\n                }\n            }\n        )\n        .then( response => response.json())\n        .then( eventsData => {\n            dispatch(eventsFetchDataSuccess(eventsData));\n        })\n        .catch( error => dispatch(eventsHasErrored(error)));\n    }\n}\n\nexport const removeEvent = (eventData, userId) => {\n    return dispatch => {\n        const url = `/api/v1/users/${userId}/events/${eventData.id}` \n        fetch(url,{\n            method: \"DELETE\",\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            }\n        })\n        .then(resp => resp.json())\n        .then( data => {\n            dispatch({ \n                type: 'REMOVE_EVENT',\n                eventId: eventData.id\n            })\n        })\n    }\n}\n","import React, { Component } from 'react'; \nimport { connect } from 'react-redux';\n\nimport MusicEvents from '../components/MusicEvents';\nimport BusinessEvents from '../components/BusinessEvents';\nimport FoodAndDrinksEvents from '../components/FoodAndDrinksEvents';\nimport { register } from '../serviceWorker';\nimport { getEvents } from '../actions/eventsActions';\nimport { withRouter } from 'react-router-dom';\n\n\n\nclass EventCategoriesContainer extends Component {\n    constructor() {\n        super();\n        this.state = {\n            events: []\n        }\n    }\n\n    componentDidUpdate(){\n        if(this.state.events.length > 0){\n            this.props.history.push('/events');\n        }\n    }\n\n    handleDisplayEvents = event => {\n        this.props.getEvents(event.target.innerText, this.props.usersLocation)\n        this.setState({\n            events: this.props.events\n        })\n    }\n\n    render() {\n        return (\n            <div className='categories-events-container'>\n                    <div className='events-components'>\n                        <MusicEvents\n                        handleDisplayEvents={this.handleDisplayEvents}\n                        />\n\n                        <FoodAndDrinksEvents \n                        handleDisplayEvents={this.handleDisplayEvents}\n                        />\n                        \n                        <BusinessEvents \n                        handleDisplayEvents={this.handleDisplayEvents}\n                        />\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        isAuthenticated: state.authReducer.isAuthenticated,\n        events: state.eventsReducer.events,\n        usersLocation: state.usersReducer.usersLocation,\n        locationSet: state.usersReducer.locationSet\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        getEvents: (searchTerm, loc) => {\n            dispatch(getEvents(searchTerm, loc))\n        }\n    }\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(EventCategoriesContainer));","import React, { Component } from 'react';\nimport DateTime  from 'react-datetime';\nimport { withAlert } from 'react-alert';\nimport moment from 'moment/moment.js';\n\nclass EventsSearchPage extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            searchTerm: '',\n            locationAddress: '',\n            eventDate: 'Date'\n        }\n    }\n\n    componentDidMount(){\n    }\n\n    handleOnChange = event => {\n        this.setState({\n            [event.target.name]: event.target.value\n        })\n    }\n\n    handleOnChangeEventDate = event => {\n        this.setState({\n            eventDate: event._d\n        })\n    } \n\n    validateInputs = inputData => {\n       if(inputData.eventDate !== 'Date' && inputData.searchTerm !== '' && inputData.locationAddress !== ''){\n            return true\n        }else {\n            return false\n        }\n    }\n\n    formatString = (string) => {\n        return string.replace(/\\s/g, '');\n    }\n\n    handleOnSubmit = event => {\n        event.preventDefault();\n        if(this.validateInputs(this.state)) {\n            //Parsed to suit Eventbrite API\n            const dateTimeParsed = moment(this.state.eventDate).format(\"YYYY-MM-DDThh:mm:ss\");\n            const searchTermFormatted = this.formatString(this.state.searchTerm);\n\n            const locationAddressFormatted = this.formatString(this.state.locationAddress);\n\n            this.props.getSearchTerm(locationAddressFormatted, searchTermFormatted, dateTimeParsed);\n        } else{\n            this.props.alert.error(\"Please fill in all search options.\")\n        }\n        this.setState({\n            searchTerm: '',\n            locationAddress: '',\n            eventDate: ''           \n        })\n    }\n\n    render() {\n        return (\n            <div className='eventsInputPage'>\n                <form id='events-search-bar' onSubmit={event => this.handleOnSubmit(event)}>\n\n                    <DateTime className='eventDate' value={this.state.eventDate} onChange={event => this.handleOnChangeEventDate(event)}/>\n\n                    <input id='searchTerm' onChange={event => this.handleOnChange(event)}type='text' name='searchTerm' value={this.state.searchTerm} placeholder='Event Type'/>\n\n                    <input id='locationAddress' onChange={event => this.handleOnChange(event)}type='text' name='locationAddress' value={this.state.locationAddress} placeholder='Location'/>\n            \n                    <input id='search-events-btn' type='submit' value='SEARCH'/>\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default withAlert(EventsSearchPage)","import React, { Component } from 'react';\n\n//Add slide show of images\nclass MainImageComponent extends Component {\n    render() {\n        return (\n            <div className='main-image-component'>\n                <h1>FIND YOUR NEXT EVENT</h1>\n            </div>\n        );\n    }\n}\n\nexport default MainImageComponent;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from \"react-router-dom\";\nimport { geolocated } from 'react-geolocated';\nimport { setUsersLocation } from '../actions/userActions';\n\nimport EventCategoriesContainer from './EventCategoriesContainer';\nimport { getUsersEvents, getEventsBySearchBar } from '../actions/eventsActions';\nimport EventsSearchPage from '../components/eventsSearchPage';\nimport MainImageComponent from '../components/MainImageComponent';\n\nclass HomePageContainer extends Component {\n    constructor(props){\n        super(props);\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        //Set Geolocation\n        if (this.props.locationSet && Object.entries(this.props.usersLocation).length === 0) {\n            this.props.setUsersLocation(this.props.coords);\n        }\n    }\n\n    getSearchTerm = (loc, searchTerm, eventDate) => {\n        //Fetches events from eventBrite API based on search term\n        this.props.getEventsBySearchBar(loc, searchTerm, eventDate);\n        this.props.history.push('/events');\n    }\n\n    render() {\n        return(\n            <div className='homePageContainer'>\n                <EventsSearchPage getSearchTerm={this.getSearchTerm}/>\n                <MainImageComponent />\n                <div id='categories-title'><h1>Categories</h1></div>\n                <EventCategoriesContainer />\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        usersLocation: state.usersReducer.usersLocation,\n        locationSet: state.usersReducer.locationSet,\n        currentUser: state.authReducer.currentUser,\n        isAuthenticating: state.authReducer.isAuthenticating,\n        isAuthenticated: state.authReducer.isAuthenticated\n    }\n}\n\nconst mapDispatchToprops = dispatch => {\n    return {\n        getEventsBySearchBar: (loc, searchTerm, eventDate) => {\n            dispatch(getEventsBySearchBar(loc, searchTerm, eventDate))\n        },\n\n        setUsersLocation: (coords) => {\n            dispatch(setUsersLocation(coords))\n          }\n    }\n}\n\nconst HomeWithGeoloc = geolocated({\n    positionOptions: {\n      enableHighAccuracy: false,\n    },\n    userDecisionTimeout: 5000,\n  })(HomePageContainer);\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToprops)(HomeWithGeoloc)) ","import React, { Component } from 'react';\nimport HeartCheckbox from 'react-heart-checkbox';\nimport { removeEvent, addEvent } from '../actions/eventsActions';\nimport { connect } from 'react-redux';\nimport { withRouter, Link } from 'react-router-dom';\nimport { withAlert } from 'react-alert';\n\n\nclass EventIndexView extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            id: this.props.id,\n            name: this.props.name,\n            venue_id: this.props.venue_id,\n            logo: this.props.logo,\n            description: this.props.description,\n            url: this.props.url,\n            start: this.props.start,\n            end: this.props.end,\n            status: this.props.status,\n            currency: this.props.currency,\n            checked: this.props.checked\n        }\n    }\n\n    componentDidMount(){\n        \n    }\n\n    truncate = (description) => {\n        if (description){\n            return (\n                description.slice(0, 200) + '...'\n            )\n        }\n    }\n\n    // handleOnClick = (event) => {\n    //     //User can save a liked event if loggedin.\n    //     if(this.props.isAuthenticated){\n    //         if(this.state.checked){\n    //             this.props.removeEvent(this.state, this.props.currentUser.id)\n    //         } else{\n    //             this.props.addEvent(this.state, this.props.currentUser.id)\n    //         }\n    //         this.setState({\n    //             checked: !this.state.checked \n    //         })\n    //     } else{\n    //         this.props.alert.info(\"Create an account to save events.\");\n    //     }\n    // }\n\n    viewEvent = () => {\n        this.props.history.push({\n            pathname: `/events/${this.props.id}`,\n            state: { currentEvent: this.state }\n        })\n    } \n\n    render() {\n        return (\n            <div id={this.state.id} className='event-index'>\n                <h1>{this.state.name}</h1>\n                <div className='event-index-main-content'>\n                    <img src={this.state.logo} alt='event-logo'/>\n                    {/* <HeartCheckbox checked={this.state.checked} onClick={event => this.handleOnClick(event)} /> */}\n                    <div className='index-view-description'><p>{this.truncate(this.props.description)}</p></div>\n                </div> \n                <button className='event-index-view-event-btn' onClick={event => this.viewEvent()}>View Event</button>\n            </div>\n        )\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        removeEvent: (eventData, userId) => {\n            dispatch(removeEvent(eventData, userId))\n        },\n        addEvent: (eventData, userId) => {\n            dispatch(addEvent(eventData, userId))\n        }\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        currentUser: state.authReducer.currentUser,\n        isAuthenticated: state.authReducer.isAuthenticated\n    }\n}\n\nexport default withAlert(withRouter(connect(mapStateToProps, mapDispatchToProps)(EventIndexView)));","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport EventIndexView from './EventIndexView';\n\nclass Events extends Component {\n    constructor(props){\n        super(props);\n    }\n\n    renderEventsFromEventBrite = () => { \n        const events = this.props.events;\n        if ( !this.props.eventsAreLoading && events){  \n            return  events.map(event => {\n                let url = event.logo !== null ? event.logo.url : ''\n                return <EventIndexView\n                key={event.id}\n                id={event.id}\n                name={event.name.text} \n                description={event.description.text}\n                timezoneStart={event.start.timezone} \n                start={event.start.local}\n                timezoneEnd={event.end.timezone} \n                end={event.end.local}\n                logo={url}\n                url={event.url} \n                shareable={event.shareable} \n                 />\n            })\n        }\n\n    }\n\n    renderEventsFromEventScoutAPI() {\n        const events = this.props.events;\n        if ( !this.props.eventsAreLoading && events){  \n            return  events.map(event => {\n                let url = event.logo !== null ? event.logo.url : ''\n                return <EventIndexView \n                id={event.id}\n                key={event.id} \n                name={event.name} \n                description={event.description}\n                start={event.start}\n                end={event.end}\n                logo={event.logo}\n                url={event.url} \n                checked={true} />\n            })\n        }\n    }\n\n    checkPropsEventsEmpty(){\n        if(this.props.events.length > 0){\n            if(this.props.events[0].name.text === undefined ){\n               return this.renderEventsFromEventScoutAPI()\n            } else {    \n               return this.renderEventsFromEventBrite()\n            }\n        }\n    }\n\n\n    render() {\n        return (\n            <div>\n                <React.Fragment>\n                   { this.checkPropsEventsEmpty() }\n                </React.Fragment>\n            </div>\n        )\n    }\n}\n\n\nexport default Events;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from \"react-router-dom\";\n\nimport EventsSearchPage from '../components/eventsSearchPage';\nimport Events from '../components/Events';\nimport { getUsersEvents, getEventsBySearchBar } from '../actions/eventsActions';\nvar Spinner = require('react-spinkit');\n\n\nclass EventsContainer extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            events: this.props.events\n        }\n    }\n    \n    componentDidMount(){\n        window.scrollTo(0, 0)\n    } \n\n    componentWillReceiveProps(prevProps){\n    }\n\n    componentDidUpdate(prevProps){\n        //If a user's event has been deleted then update state with new array.\n        if(prevProps.usersEvents.length !== this.props.usersEvents.length){\n            this.setState({\n                events: this.props.usersEvents \n            })\n        }\n         if(prevProps.events.length > 0){\n            //Check to see of events have been updated to new array or update the events state to the new events \n            if(prevProps.events[0].name.text !== this.props.events[0].name.text) {\n                this.setState({\n                    events: this.props.events\n                })\n            }\n        } else if(prevProps.eventsAreLoading){\n            this.setState({\n                events: this.props.events\n            })\n        }\n    }\n    \n    getSearchTerm = (loc, searchTerm, eventDate) => {\n        //Fetches events from eventBrite API based on search term\n        this.props.getEventsBySearchBar(loc, searchTerm, eventDate);\n    }\n\n    handleViewEventsClick = event => {\n        event.preventDefault();\n        this.props.getUsersEvents(this.props.currentUser)\n        this.setState({ \n            events: this.props.usersEvents\n        })  \n    }\n\n    renderViewYourEventsBtn = () => {\n        if(this.props.isAuthenticated) {\n            return (\n                <button id='view-users-events' onClick={event => this.handleViewEventsClick(event)}>Your Events</button>\n            )\n        }\n    }\n\n    render() {\n        return(\n            <div className='eventsContainer'> \n                {this.renderViewYourEventsBtn()}\n                {this.props.eventsAreLoading ? \n                <div id='spinner-div'>\n                    <Spinner  name=\"ball-scale-ripple-multiple\" color=\"#4ff462\"/><span>LOADING</span>\n                </div> :  <Events events={this.state.events} />}\n                <EventsSearchPage getSearchTerm={this.getSearchTerm} />\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        currentUser: state.authReducer.currentUser,\n        isAuthenticated: state.authReducer.isAuthenticated,\n\n        eventsAreLoading: state.eventsReducer.eventsAreLoading,\n        events: state.eventsReducer.events,\n        usersEvents: state.eventsReducer.usersEvents,\n        usersLocation: state.usersReducer.usersLocation,\n        eventsHasErrors: state.eventsReducer.eventsHasErrors\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        getEventsBySearchBar: (loc, searchTerm, eventDate) => {\n            return dispatch(getEventsBySearchBar(loc, searchTerm, eventDate))\n        },\n        getUsersEvents: (user) => {\n            return dispatch(getUsersEvents(user))\n        } \n    }\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(EventsContainer))","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { withAlert } from \"react-alert\";\n\nimport { displayErrors } from './Errors';\nimport { editUser } from '../actions/userActions';\n\nclass UserInput extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            id: this.props.currentUser.id,\n          user_name: this.props.currentUser.user_name,\n            email: this.props.currentUser.email,\n            password: this.props.currentUser.password\n        }\n      }\n    \n      componentDidUpdate(prevProps) {\n          if(this.props.hasErrors && prevProps.isLoading){\n              displayErrors(this.props.errors, this.props.alert);        \n          }\n      }\n\n      handleOnChange = event => {\n        this.setState({\n            [event.target.name]: event.target.value\n        })\n      }\n    \n      handleSubmit = event => {\n          \n          event.preventDefault();\n          const user = {\n            id: this.state.id,\n            user_name: this.state.user_name,\n            email: this.state.email,\n            password: this.state.password\n          }\n          this.props.editUser(user);\n      } \n\n    render() {\n        return (\n            <div className='userInput'>\n               <form id='user-edit-form' onSubmit={event => this.handleSubmit(event)} > \n                <div id='user-edit-title'><h1>EDIT ACCOUNT</h1></div>\n                  <div id='user-edit-form-div'>\n                     <input id='user-edit-user_name' onChange={event => this.handleOnChange(event)} name='user_name' type='text' value={this.state.user_name} placeholder='New User Name'/>\n                      \n                    <input id='user-edit-password' onChange={event => this.handleOnChange(event)} name='password' type='password' value={this.state.password} placeholder='New Password' />\n                  </div>\n                    <input className='user-edit-btn' type='submit' value='SUBMIT'/>\n                </form>\n            </div>\n        )\n    }\n\n}\n\nconst mapStateToProps = state => {\n    return {\n        currentUser: state.authReducer.currentUser,\n        isLoading: state.usersReducer.isLoading,\n        errors: state.usersReducer.errors,\n        hasErrors: state.usersReducer.hasErrors\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        editUser: (user) => {\n            dispatch(editUser(user))\n        }\n    }\n}\n\nexport default withAlert(withRouter(connect(mapStateToProps, mapDispatchToProps)(UserInput)));","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter, Link } from 'react-router-dom';\n\nimport { deleteUser } from '../actions/userActions';\nimport { logoutUser } from '../actions/authActions';\nimport UserInput from '../components/UserInput';\n\nclass AccountContainer extends Component {\n  \n    componentWillMount(){\n        if (!this.props.isAuthenticated && !this.props.isAuthenticating) {\n            this.props.history.push('/signin');\n        }\n    }\n\n    handleDelete = (event) => {\n        this.props.logoutUser(this.props.currentUser);\n        this.props.deleteUser(this.props.currentUser);\n        this.props.history.push('/signup');\n\n    }\n\n    render() {\n        return(\n            <div className='account-container'>\n                    <UserInput />\n                    <button id='delete-account-button' onClick={(event) => this.handleDelete(event)}>\n                        <div className='box-left'>\n                            <i className='but-icon fa fa-lg fa-times'></i>\n                        </div>\n                    </button>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return { \n        currentUser: state.authReducer.currentUser,\n        isAuthenticated: state.authReducer.isAuthenticated,\n        isAuthenticating: state.authReducer.isAuthenticating\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n         deleteUser: user => {\n            dispatch(deleteUser(user))\n          },\n           \n        logoutUser: user => {\n            dispatch(logoutUser(user))\n        }\n    }\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(AccountContainer))","const defaultState = {\n    events: [],\n    eventsHasErrors: false,\n    eventsAreLoading: false,\n    currentEvent: {},\n    usersEvents: []\n}\n\nexport default function eventsReducer(state = defaultState, action) {\n    switch (action.type) {\n\n      case 'EVENTS_HAS_ERRORS':\n            return { \n                ...state,\n                eventsHasErrors: true,\n                eventsAreLoading: false,            \n                errors: action.errors\n            }\n\n        case 'EVENTS_ARE_LOADING':\n            return {\n                ...state,\n                eventsAreLoading: true,\n                eventsHasErrors: false,\n                }\n\n        case 'EVENTS_FETCH_DATA_SUCCESS':\n            return {\n                ...state,\n                eventsAreLoading: false,\n                eventsHasErrors: false,\n                events: action.events.events\n            }\n\n        case 'ADDING_EVENT': \n            return {\n                 ...state,\n                 eventsAreLoading: true,\n                 eventsHasErrors: false,\n                 currentEvent: action.currentEvent \n            }\n        \n        case 'USERS_EVENTS_FETCH_SUCCESS':\n            return {\n                ...state,\n                eventsAreLoading: false,\n                usersEvents: action.usersEvents,\n            }\n\n        case 'ADD_TO_USERS_EVENTS': \n            return {\n                ...state,\n                currentEvent: action.eventData,\n                eventsAreLoading: false,\n                usersEvents: [...state.usersEvents, action.eventData]\n            }\n\n        case 'REMOVE_EVENT': \n            return {\n                ...state,\n                usersEvents: state.usersEvents.filter( ({ id }) => id !== action.eventId)\n            }\n\n        default:\n            return state;\n    }\n}\n ","import React, { Component } from 'react';\nimport HeartCheckbox from 'react-heart-checkbox';\nimport { removeEvent, addEvent, getEvents } from '../actions/eventsActions';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport moment from 'moment/moment.js';\nimport { withAlert } from 'react-alert';\nimport eventsReducer from '../reducers/eventsReducer';\n\n\nclass EventComponent extends Component {\n    constructor(props) {\n        super(props)\n        this.state = this.props.location.state.currentEvent\n    }\n\n    componentDidMount() {\n        if(this.isUsersEvent(this.props.location.state.currentEvent)){\n            this.setState({\n                checked: true\n            })\n        }\n    }\n\n    handleOnClickAddAndDelete = (event) => {\n        //User can save a liked event if logged in.\n        if(this.props.isAuthenticated){\n            if(this.state.checked){\n                this.props.removeEvent(this.state, this.props.currentUser.id)\n            } else{\n                this.props.addEvent(this.state, this.props.currentUser.id)\n            }\n            this.setState({\n                checked: !this.state.checked \n            })\n        } else{\n                this.props.alert.info(\"Create an account to save events.\");\n        }\n    }\n\n    parseTimeDate = (time) => {\n        return moment(time).format('MMMM Do YYYY @ h:mm a');\n    }\n\n    isUsersEvent = (currentEvent) => {\n        const currentEventId = Number(currentEvent.id);\n         return this.props.usersEvents.some(evnt => evnt.id === currentEventId);\n    }\n\n    render() {\n        return (\n            <div id={this.state.id} className='event'>\n                <h1>{this.state.name}</h1>\n                <div className='event-content'>\n                <img src={this.state.logo} alt='event-logo'/>\n                <HeartCheckbox checked={this.state.checked} onClick={event => this.handleOnClickAddAndDelete(event)} />\n                    <ul>\n                        <span>Starts</span>\n                        <li>{this.parseTimeDate(this.state.start)}</li>\n                        <span>Ends</span>\n                        <li>{this.parseTimeDate(this.state.end)}</li>\n                    </ul>\n                </div>\n                <a className='event-page-link' href={this.state.url}><img src=\"https://img.icons8.com/ultraviolet/26/000000/link.png\"></img></a>\n                <div className='content-description'>\n                    <h3>Description</h3>\n                    <p>{this.state.description}</p>\n                </div>\n            </div>\n        )\n    }   \n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        removeEvent: (eventData, userId) => {\n            dispatch(removeEvent(eventData, userId))\n        },\n        addEvent: (eventData, userId) => {\n            dispatch(addEvent(eventData, userId))\n        }\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        currentUser: state.authReducer.currentUser,\n        isAuthenticated: state.authReducer.isAuthenticated,\n        usersEvents: state.eventsReducer.usersEvents\n    }\n}\n\nexport default withAlert(withRouter(connect(mapStateToProps, mapDispatchToProps)(EventComponent)))\n\n//Event date receieved per event\n// capacity: null\n// capacity_is_custom: null\n// category_id: \"103\"\n// changed: \"2019-01-09T16:17:54Z\"\n// created: \"2018-06-12T11:10:31Z\"\n// currency: \"GBP\"\n// description: {text: \"An introduction on devising music sessions for stu…can be found at www.kent-music.com/privacy-policy\", html: \"<P>An introduction on devising music sessions for …nt-music.com/privacy-policy</A></SPAN></SPAN></P>\"}\n// end: {timezone: \"Europe/London\", local: \"2019-01-24T18:30:00\", utc: \"2019-01-24T18:30:00Z\"}\n// format_id: \"9\"\n// hide_end_date: false\n// hide_start_date: false\n// id: \"46973208130\"\n// is_externally_ticketed: false\n// is_free: false\n// is_locked: false\n// is_reserved_seating: false\n// is_series: false\n// is_series_parent: false\n// listed: true\n// locale: \"en_GB\"\n// logo: {crop_mask: {…}, original: {…}, id: \"45998785\", url: \"https://img.evbuc.com/https%3A%2F%2Fcdn.evbuc.com%…53%2C580%2C290&s=e8ef9a4dcd0f1b8df02206509c471cfa\", aspect_ratio: \"2\", …}\n// logo_id: \"45998785\"\n// name: {text: \"Music and Autism\", html: \"Music and Autism\"}\n// online_event: false\n// organization_id: \"136284258300\"\n// organizer_id: \"7963846409\"\n// privacy_setting: \"unlocked\"\n// resource_uri: \"https://www.eventbriteapi.com/v3/events/46973208130/\"\n// shareable: true\n// show_colors_in_seatmap_thumbnail: false\n// show_pick_a_seat: false\n// show_seatmap_thumbnail: false\n// source: \"create_2.0\"\n// start: {timezone: \"Europe/London\", local: \"2019-01-24T16:00:00\", utc: \"2019-01-24T16:00:00Z\"}\n// status: \"live\"\n// subcategory_id: null\n// tx_time_limit: 1200\n// url: \"https://www.eventbrite.co.uk/e/music-and-autism-tickets-46973208130?aff=ebapi\"\n// venue_id: \"25201755\"\n// version: \"3.0.","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { withAlert } from 'react-alert';\nimport DateTime from 'react-datetime';\nimport ImageUploader from 'react-images-upload';\n\nimport { addEvent } from '../actions/eventsActions';\nimport { displayErrors } from './Errors';\n//Remove Create event. use liked event instead to create event and persist to database.\nclass EventInput extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            name: '',\n            logo: 'https://res.cloudinary.com/zacwillmington/image/upload/v1550263383/md-duran-628447-unsplash_udufrg.jpg',\n            description: '',\n            url: '',\n            start: new Date(),\n            end: new Date(),\n            status: '',\n            currency: '',\n            user_id: this.props.currentUser.id,\n            alerted: false\n        }\n    }\n\n    componentWillMount() {\n        if (!this.props.isAuthenticated && !this.props.isAuthenticating){\n            this.props.alert.info(\"Please Signin to create or edit an event.\")\n            this.props.history.push('/signin');\n        }\n    }\n\n    componentDidUpdate(prevProps) {\n        if(this.props.eventsHasErrors && !this.state.alerted) {\n            displayErrors(this.props.eventErrors, this.props.alert)\n            this.setState({ alerted: true})\n    } else if(this.props.eventSuccess) {\n            debugger\n            // const userId = this.props.currentUser.id;\n            // const eventId = this.props.currentEvent.id;\n            // this.setState({ alerted: true })\n            // this.props.history.push({\n            //     pathname: `/users/${userId}/events/${eventId}`,\n            //     state: this.props.currentEvent\n            // })\n            // this.props.alert.success(\"Event Added!\");\n        }\n    }\n\n    handleOnChange = event => {\n        this.setState({\n            [event.target.name]: event.target.value\n        })\n      }\n\n      handleOnChangeDateTimeStart = event => {\n        this.setState({\n            start: event._d\n        })\n      }\n\n      handleOnChangeDateTimeEnd = event => {\n        this.setState({\n            end: event._d\n        })\n      }\n\n      onDrop = picture => {\n          this.setState({ logo: picture[0].name })\n      }\n\n      handleOnSubmit = event => {\n        event.preventDefault();\n        this.props.addEvent(this.state, this.state.user_id);\n        this.setState({\n            name: '',\n            venue_id: '',\n            logo: 'https://res.cloudinary.com/zacwillmington/image/upload/v1550263383/md-duran-628447-unsplash_udufrg.jpg',//Standard image \n            description: '',\n            url: '',\n            start: new Date(),\n            end: new Date(),\n            status: '',\n            currency: '',\n            user_id: this.props.currentUser.id,\n            alerted: false\n        })    \n        this.props.history.push('/events');\n      }\n\n    render() {\n        return (\n            <div className='event-input'>\n            <div id='create-event-input-title-div'><h2>CREATE YOUR EVENT</h2></div>\n                <form onSubmit={event => this.handleOnSubmit(event)}>\n                    <section className='event-input-section-1'>\n                        <div className='event-input-form-section' id='event-name'>\n                            <label htmlFor='event-input-name'>Event Name</label>\n                            <input id='event-input-name' onChange={event => this.handleOnChange(event)}\n                            type='text' \n                            name='name' \n                            value={this.state.name}/>\n                        </div>\n                        <div className='event-input-form-section'>\n                            <label htmlFor='event-input-status'>Event Status</label>\n                            <input id='event-input-status' onChange={event => this.handleOnChange(event)}\n                            type='text' \n                            name='status' \n                            value={this.state.status}/>\n                        </div>   \n                 </section>\n\n                    <section className='event-input-section-2'>\n                        <div className='event-input-form-section'>\n                            <label htmlFor='event-input-currency'>Currency</label>\n                            <input id='event-input-currency' onChange={event => this.handleOnChange(event)}\n                            type='text' \n                            name='currency' \n                            value={this.state.currency}/>\n                        </div>\n                        <div className='event-input-form-section'>\n                            <label htmlFor='event-input-url'>Event URL</label>\n                            <input id='event-input-url' onChange={event => this.handleOnChange(event)}\n                            type='text' \n                            name='url' \n                            value={this.state.url}/>\n                        </div>\n                    </section>\n                    {/* todo: implement save file to cloudnary api with dispatch action save image */}\n                    {/* <ImageUploader\n                        withIcon={true}\n                        buttonText='Choose images'\n                        onChange={event => this.onDrop(event)}\n                        imgExtension={['.jpg', '.gif', '.png', '.gif', '.jpeg']}\n                    /> */}\n                    <br></br>\n                    <input id='user_id'\n                     type='hidden' \n                     name='user_id' \n                     />\n                    <label htmlFor='event-input-description'>Description</label>\n                    <textarea id='event-input-description' onChange={event => this.handleOnChange(event)}\n                     type='text-area' \n                     name='description' \n                     value={this.state.description}/>\n                    <br></br>\n                    <div className='event-dateTime'>\n                        <DateTime value={this.props.start} onChange={event => this.handleOnChangeDateTimeStart(event)}/>\n                        <DateTime value={this.props.end} onChange={event => this.handleOnChangeDateTimeEnd(event)}/>\n                    </div>\n                    <input id='create-event-btn' type='submit' value='Create Event'/>\n                </form>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        currentUser: state.authReducer.currentUser,\n        isAuthenticated: state.authReducer.isAuthenticated,\n        isAuthenticating: state.authReducer.isAuthenticating,\n\n        eventSuccess: state.eventsReducer.eventSuccess,\n        eventsHasErrors: state.eventsReducer.eventsHasErrors,\n        eventErrors: state.eventsReducer.errors,\n        usersEvents: state.eventsReducer.usersEvents,\n        currentEvent: state.eventsReducer.currentEvent  \n    }\n}\nconst mapDispatchToProps = dispatch => {\n    return {\n        addEvent: (eventData, userId)=> {\n            dispatch(addEvent(eventData, userId))\n        }\n    }\n}\n\nexport default withAlert(withRouter(connect(mapStateToProps, mapDispatchToProps)(EventInput)))","import React, { Component } from 'react';\nimport { Route } from 'react-router-dom';\nimport './App.css';\n\nimport SigninPage from './components/SigninPage';\nimport SignupPage from './components/SignupPage';\nimport NavBar from './components/NavBar';\nimport LogoutPage from './components/LogoutPage';\nimport HomePageContainer from './containers/HomePageContainer';\nimport EventsContainer from './containers/EventsContainer';\nimport AccountContainer from './containers/AccountContainer';\nimport EventComponent from './components/EventComponent';\nimport UserInput from './components/UserInput';\nimport EventInput from './components/EventInput';\nimport Footer from './components/Footer';\n\n\n\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n          <React.Fragment>\n          <NavBar />\n          {/* Protected routes */}\n          <Route exact path='/' component={HomePageContainer} />\n\n          {/* user's events routes */}\n            <Route exact path='/users/:id/events/new' component={EventInput} />\n\n            <Route exact path='/users/:id/events/:event_id/edit' component={EventInput} />\n\n            <Route exact path='/users/:id/events' component={EventsContainer} />\n\n\n            {/* events routes */}\n            <Route exact path='/events' component={EventsContainer} />\n            <Route exact path='/events/:id' component={EventComponent} />\n\n            \n\n            {/* Account routes */}\n            <Route exact path='/users/:id' component={AccountContainer} />\n\n           {/* NON protected routes */}\n            <Route path='/signup' component={SignupPage} />\n            <Route path='/signin' component={SigninPage} />\n            <Route path='/logout' component={LogoutPage} />\n      \n          </React.Fragment>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const defaultState = {\n    user: {},\n    errors: [],\n    hasErrors: false,\n    isLoading: false,\n    isLoggedin: false,\n    locationSet: false,\n    usersLocation: {}\n}\n\nexport default function usersReducer(state = defaultState, action) {\n        switch (action.type) {\n            case 'SET_LOCATION':\n            return {\n                ...state,\n                usersLocation: action.coords,\n                locationSet: true\n            }\n\n            case 'SENDING_USER_REQUEST':\n                return { \n                    ...state,\n                    currentUser: action.user,\n                    isAuthenticated: true,\n                    isLoading: true,\n                    hasErrors: false,\n                    errors: []\n                 }\n\n            case 'UPDATE_CURRENT_USER':\n                return { \n                    ...state,\n                    currentUser: action.user,\n                    isAuthenticated: true,\n                    isLoading: false,\n                    errors: []\n                 }\n       \n            case 'USER_HAS_ERRORS':\n                return { \n                    ...state,\n                    currentUser: action.user,\n                    isAuthenticated: true,  \n                    errors: action.errors,\n                    isLoading: false,\n                    hasErrors: true\n                 }\n\n            case 'DELETE_USER':\n                return {\n                    ...state,\n                    currentUser: {},\n                    isAuthenticated: false, \n                    isLoading: false,\n                    errors: []\n                } \n\n            default:\n                return state;\n        }\n    }\n","const defaultState = {\n    isAuthenticated: false,\n    isAuthenticating: false,\n    isLoading: false,\n    hasErrors: false,\n    currentUser: {},\n    token: null,\n    errors: []\n}\n\nexport default function authReducer(state = defaultState, action) {\n    switch (action.type) {\n\n        case 'LOADING_AUTH_REQUEST':\n            return {\n                ...state,\n                isLoading: true,\n                hasErrors: false\n            }\n\n        case 'AUTHENTICATION_REQUEST':\n            return {\n                ...state,\n                isAuthenticating: true,\n                isLoading: true\n            }\n\n        case 'AUTHENTICATION_SUCCESS':   \n            return { \n                ...state,\n                currentUser: action.user,\n                token: action.token,\n                isAuthenticated: true,  \n                isAuthenticating: false,\n                hasErrors: false,\n                errors: []\n            }\n\n        case 'AUTHENTICATION_FAILURE':\n            return {\n                ...state,\n                currentUser: {},\n                isAuthenticated: false,  \n                isAuthenticating: false,\n                isLoading: false,\n                token: null,\n                hasErrors: true,\n                errors: action.errors\n            }\n        \n        default:\n            return state;\n    }\n} \n","import { combineReducers } from \"redux\";\nimport usersReducer from './usersReducer';\nimport eventsReducer from './eventsReducer'\nimport authReducer from './authReducer';    \n    \n\nconst rootReducer = combineReducers({\n    usersReducer,\n    eventsReducer,\n    authReducer\n});\n\nexport default rootReducer;\n\n","import { persistStore, persistReducer } from 'redux-persist';\n\nimport storage from 'redux-persist/lib/storage';\nimport autoMergeLevel2 from 'redux-persist/lib/stateReconciler/autoMergeLevel2'\nimport rootReducer from './reducers/manageReducers';\nimport thunk from 'redux-thunk';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport reduxReset from 'redux-reset';\n\nimport logger from 'redux-logger'\n\nconst persistConfig = {\n\tkey: 'root',\n\tstorage: storage,\n\tstateReconciler: autoMergeLevel2\n}\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer)\n\n\n\texport let store = createStore(persistedReducer, compose(applyMiddleware(thunk, logger), reduxReset()));\n\texport let persistor = persistStore(store);\n\t","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router} from 'react-router-dom';\n\nimport { Provider } from 'react-redux';\nimport { Provider as AlertProvider }  from \"react-alert\";\nimport AlertTemplate from \"react-alert-template-basic\";\n\nimport { store, persistor } from './store';\nimport { PersistGate } from 'redux-persist/integration/react';\n\nconst options = {\n    position: 'top left',\n    timeout: 10000,\n    offset: '30px',\n    transition: 'scale'\n  }\n// change logger to dev only //https://github.com/LogRocket/redux-logger\n\nReactDOM.render(\n    <AlertProvider template={AlertTemplate} {...options} store={store}>\n            <Provider store={store}>\n                <PersistGate loading={null} persistor={persistor}>\n                    <Router>\n                        <App />\n                    </Router>\n                </PersistGate>\n            </Provider>\n        </AlertProvider>, document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}