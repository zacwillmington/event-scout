eventScout

TODO
    - add sessions controllers and routes
    - React routes 
    - Redux setup
    - login funtionality 
    - authentication

    
Requirements

- The code should be written in ES6 as much as possible
- Use the create-react-app generator to start your project.
- Follow the instructions on this repo to setup the generator: create-react-app
- Your app should have one HTML page to render your react-redux application
- There should be 2 container components
- There should be 5 stateless components
- There should be 3 routes
- The Application must make use of react-router and proper RESTful routing (should you choose to use react-router v3 please refer to the appropriate docs; docs for v4 can be found here)
- Use Redux middleware to respond to and modify state change
- Make use of async actions to send data to and receive data from a server
- Your Rails API should handle the data persistence. You should be using fetch() within your actions to GET and POST data from your API - do not use jQuery methods.
- Your client-side application should handle the display of data with minimal data manipulation
- Your application should have some minimal styling: feel free to stick to a framework (like react-bootstrap), but if you want to write (additional) CSS yourself, go for it!

you can search for events, by liking thr event it saves it to you liked list.

maybe event on share on social media?

Schema 
    - Users
        - username
        - email
        - password

    - Events 
        - name
        - venue_id
        - description
        - url
        - start
        - end
        - status
        - currency

    - Venue
        - address
        - id
        - age_restriction
        - capacity 
        - name

    - TicketClass
        - name
        - event_id
        - description
        - cost
        - fee 
        - free
        - maximum_quantity

Pages
    - /users/:id/events = likes page
    - /events/:id = event page
    - /users/:id/events/new = create a new event
    - /users/:id/events/:id/edit
    - /users/:id/events/:id/delete 

Containers 

    - EventsContainerComponent
    - AccountContainerComponent
    - HomeContainerComponent
    

Components
    - EventComponent(stateless)
    - EventFormComponent(state)
    - VenueComponent(stateless)
    - VeuneFormComponent(state)
    - AccountComponent
    - AccountEditComponent(state)